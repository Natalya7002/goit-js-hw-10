{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\n\nconst startButton = document.querySelector('button[data-start]');\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0].getTime() > Date.now()) {\n      userSelectedDate = selectedDates[0];\n      startButton.disabled = false;\n    } else {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n      stopTimer();\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n\n  const hours = Math.floor((ms % day) / hour);\n\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconst timer = {\n  days: document.querySelector('span[data-days]'),\n  hours: document.querySelector('span[data-hours]'),\n  minutes: document.querySelector('span[data-minutes]'),\n  seconds: document.querySelector('span[data-seconds]'),\n};\n\nlet timerInterval;\n\nfunction startTimer() {\n  timerInterval = setInterval(() => {\n    const currentTime = Date.now();\n    const deltaTime = userSelectedDate - currentTime;\n    const { days, hours, minutes, seconds } = convertMs(deltaTime);\n\n    timer.days.textContent = addLeadingZero(days);\n    timer.hours.textContent = addLeadingZero(hours);\n    timer.minutes.textContent = addLeadingZero(minutes);\n    timer.seconds.textContent = addLeadingZero(seconds);\n\n    if (deltaTime < 1000) {\n      stopTimer();\n    }\n  }, 1000);\n}\n\nfunction stopTimer() {\n  clearInterval(timerInterval);\n  timer.days.textContent = '00';\n  timer.hours.textContent = '00';\n  timer.minutes.textContent = '00';\n  timer.seconds.textContent = '00';\n}\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n\n  if (userSelectedDate === null) {\n    return;\n  }\n\n  startTimer();\n});\n"],"names":["userSelectedDate","startButton","options","selectedDates","iziToast","stopTimer","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","timer","timerInterval","startTimer","currentTime","deltaTime"],"mappings":"+IAKA,IAAIA,EAAmB,KAEvB,MAAMC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,GAAG,QAAO,EAAK,KAAK,OACpCH,EAAmBG,EAAc,GACjCF,EAAY,SAAW,KAEvBG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDH,EAAY,SAAW,GACvBI,IAEH,CACH,EAEAC,EAAU,mBAAoBJ,CAAO,EAErC,SAASK,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,MAAMC,EAAQ,CACZ,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACtD,EAEA,IAAIC,EAEJ,SAASC,GAAa,CACpBD,EAAgB,YAAY,IAAM,CAChC,MAAME,EAAc,KAAK,MACnBC,EAAYnB,EAAmBkB,EAC/B,CAAE,KAAAT,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUY,CAAS,EAE7DJ,EAAM,KAAK,YAAcF,EAAeJ,CAAI,EAC5CM,EAAM,MAAM,YAAcF,EAAeH,CAAK,EAC9CK,EAAM,QAAQ,YAAcF,EAAeF,CAAO,EAClDI,EAAM,QAAQ,YAAcF,EAAeD,CAAO,EAE9CO,EAAY,KACdd,GAEH,EAAE,GAAI,CACT,CAEA,SAASA,GAAY,CACnB,cAAcW,CAAa,EAC3BD,EAAM,KAAK,YAAc,KACzBA,EAAM,MAAM,YAAc,KAC1BA,EAAM,QAAQ,YAAc,KAC5BA,EAAM,QAAQ,YAAc,IAC9B,CAEAd,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GAEnBD,IAAqB,MAIzBiB,GACF,CAAC"}